name: Github Action - Spring boot

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [developer]
  pull_request:
    branches: [main, developer]

env:
  # These can be stored in secrets, if desired.
  OPENSHIFT_NAMESPACE: estado-cuenta-dinamico-dev
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package -Pcoverage

      - name: Run tests with Maven
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

      - name: Download and Install Kiuwan Local Analyzer
        run: |
          java -version
          echo ${HOME}
          wget https://www.kiuwan.com/pub/analyzer/KiuwanLocalAnalyzer.zip -P ${HOME}
          unzip ${HOME}/KiuwanLocalAnalyzer.zip -d ${HOME}
          chmod +x ${HOME}/KiuwanLocalAnalyzer/bin/*.sh
      
      - name: Kiuwan Baseline Analysis
        run: |
          ${HOME}/KiuwanLocalAnalyzer/bin/agent.sh -n Sistemas-Aplicaciones_MONEX -s ${HOME}/repo -l "hello-world-spring-boot:${{ github.sha }}" --user ${{ secrets.KIUWAN_USER }} --pass ${{ secrets.KIUWAN_PASS }}

  openshift:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Install oc
      uses: redhat-actions/oc-installer@v1
      with:
        oc_version: '4.6'

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@v1
      with:
        # URL to your OpenShift cluster.
        # Refer to Step 2.
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        # Authentication Token. Can use username and password instead.
        # Refer to Step 3.
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        # Disables SSL cert checking. Use this if you don't have the certificate authority data.
        insecure_skip_tls_verify: true
        #  Optional - this sets your Kubernetes context's current namespace after logging in.
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: hello-world-spring-boot
        tags: "latest ${{ github.sha }}"
        containerfiles: |
          ./Dockerfile

    - name: Log in to ghcr.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        registry: ${{ env.IMAGE_REGISTRY }}

    - name: Push To Github Package
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry:  ${{ env.IMAGE_REGISTRY }}

    - name: Create and expose app
      uses: redhat-actions/oc-new-app@v1
      with:
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        app_name: hello-world-spring-boot
        port: 8080
        registry_hostname: ${{ env.IMAGE_REGISTRY }}
        image: ${{ env.IMAGE_REGISTRY }}/hello-world-spring-boot:latest
        registry_username: ${{ env.REGISTRY_USER }}
        registry_password: ${{ env.REGISTRY_PASSWORD }}
